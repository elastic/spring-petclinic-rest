version: '2.2'
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
    container_name: spring-petclinic-elasticsearch
    environment:
    - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
    - discovery.type=single-node
    - ELASTIC_PASSWORD=changeme
    - cluster.name=sa-demo-spring-petclinic
    - bootstrap.memory_lock=true
    - xpack.monitoring.enabled=true
    - xpack.ml.node_concurrent_job_allocations=8
    - xpack.security.enabled=true
    networks:
      spring-petclinic-net:
        aliases:
        - es
        - elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 4g
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      retries: 10
      interval: 20s
    ports:
    - "127.0.0.1:${ELASTICSEARCH_PORT:-9200}:9200"
    cap_add:
    - IPC_LOCK

  kibana:
    image: docker.elastic.co/kibana/kibana:${ES_VERSION:-6.4.0}
    environment:
      SERVER_HOST: "0.0.0.0"
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: changeme
      XPACK_SECURITY_SECURECOOKIES: "false"
      XPACK_MONITORING_KIBANA_COLLECTION_ENABLED: "false"
      XPACK_MONITORING_ENABLED: "true"
    networks:
      spring-petclinic-net:
        aliases:
        - kibana
    ports:
    - "127.0.0.1:${KIBANA_PORT:-5601}:5601"
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://kibana:5601/"]
      retries: 10
      interval: 10s
    depends_on:
      elasticsearch:
        condition: service_healthy

  apm-server:
    image: docker.elastic.co/apm/apm-server:${ES_VERSION}
    container_name: spring-petclinic-apm-server
    ports:
    - "127.0.0.1:${APM_SERVER_PORT:-8200}:8200"
    - "127.0.0.1:${APM_SERVER_MONITOR_PORT:-6060}:6060"
    networks:
      spring-petclinic-net:
        aliases:
        - apm-server
    command: >
      apm-server -e
        -E apm-server.register.ingest.pipeline.enabled=true
        -E apm-server.rum.enabled=true
        -E apm-server.rum.event_rate.limit=100000
        -E apm-server.host=0.0.0.0:8200
        -E apm-server.read_timeout=1m
        -E apm-server.shutdown_timeout=2m
        -E apm-server.write_timeout=1m
        -E setup.kibana.host=kibana:5601
        -E setup.kibana.protocol=http
        -E setup.kibana.username=elastic
        -E setup.kibana.password=changeme
        -E setup.template.enabled=true
        -E setup.template.overwrite=true
        -E setup.template.settings.index.number_of_replicas=0
        -E setup.template.settings.index.number_of_shards=1
        -E output.elasticsearch.host=elasticsearch:9200
        -E output.elasticsearch.username=elastic
        -E output.elasticsearch.password=changeme
        -E logging.metrics.enabled=true
        -E xpack.monitoring.elasticsearch=true
    cap_drop:
    - ALL
    cap_add:
    - CHOWN
    - DAC_OVERRIDE
    - SETGID
    - SETUID
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://apm-server:8200/healthcheck"]
      retries: 10
      interval: 10s

  mysql:
    image: mysql:5.7
    container_name: spring-petclinic-mysql
    networks:
      spring-petclinic-net:
        aliases:
        - mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=petclinic
      - MYSQL_DATABASE=petclinic
    volumes:
      - "./mysql-docker.cnf:/etc/mysql/conf.d/docker.cnf:ro"

  spring-petclinic-server:
    build: .
    image: docker.elastic.co/demos/spring-petclinic-server:${ES_VERSION}
    container_name: spring-petclinic-server
    networks:
      spring-petclinic-net:
        aliases:
        - spring-petclinic-server
    ports:
    - "127.0.0.1:${SERVER_PORT:-8000}:8000"
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    environment:
      ELASTIC_APM_SERVER_URL: ${ELASTIC_APM_SERVER_URL:-http://apm-server:8200}
      ELASTIC_APM_SPAN_FRAMES_MIN_DURATION: -1
      ELASTIC_APM_CAPTURE_BODY: all
      SERVER_PORT: ${SERVER_PORT:-8000}
      JAVA_PROFILE: mysql,spring-data-jpa
      DATABASE_URL: jdbc:mysql://mysql:3306/petclinic?useUnicode=true
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: petclinic
      DATABASE_DRIVER: com.mysql.jdbc.Driver
      DATABASE_DIALECT: MYSQL
      DATABASE_PLATFORM: org.hibernate.dialect.MySQLDialect
      DATASOURCE_SCHEMA: classpath*:db/mysql/initDB.sql
      DATASOURCE_DATA: classpath*:db/mysql/populateDB.sql
      INITIALIZE_DB: "true"
      ELASTIC_APM_SERVICE_NAME: petclinic-spring
    depends_on:
      elasticsearch:
        condition: service_healthy
      apm-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://spring-petclinic-server:${SERVER_PORT:-8000}/"]
      interval: 10s
      retries: 10

  spring-petclinic-client:
    build: ./frontend
    image: docker.elastic.co/demos/spring-petclinic-client:${ES_VERSION}
    container_name: spring-petclinic-client
    networks:
      spring-petclinic-net:
        aliases:
        - spring-petclinic-client
    ports:
    - "127.0.0.1:${CLIENT_SERVER_PORT:-3000}:3000"
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    environment:
      ELASTIC_APM_SERVER_URL: ${ELASTIC_APM_SERVER_URL:-http://apm-server:8200}
      ELASTIC_APM_SERVER_JS_URL: http://localhost:8200
      ELASTIC_APM_SERVICE_VERSION: 1.0.0
      ELASTIC_APM_SERVICE_NAME: petclinic
      API_SERVER: 'http://spring-petclinic-server:${SERVER_PORT:-8000}'
      SERVER_PORT: ${CLIENT_SERVER_PORT:-3000}
      NODE_ENV: production
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_URL: http://elasticsearch:9200
      PETCLINIC_INTERNAL_URL: "http://petclinic-client:${CLIENT_SERVER_PORT}"
      PETCLINIC_EXTERNAL_URL: "http://localhost:${CLIENT_SERVER_PORT}"
      ELASTICSEARCH_PASSWORD: changeme
      ADDRESS_SERVER: "http://address-finder:5000"
    depends_on:
      spring-petclinic-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://spring-petclinic-client:${CLIENT_SERVER_PORT:-3000}/"]
      interval: 10s
      retries: 10

networks:
  spring-petclinic-net:
    driver: bridge
